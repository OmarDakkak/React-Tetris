{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/tetrisbis/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\nexport const useStage = (player, resetPlayer) => {\n  const _useState = useState(createStage()),\n        _useState2 = _slicedToArray(_useState, 2),\n        stage = _useState2[0],\n        setStage = _useState2[1];\n\n  useEffect(() => {\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n    };\n\n    setStage(prev => updateStage(prev));\n  }, []);\n  return [stage, setStage];\n};","map":{"version":3,"sources":["/Users/macbookpro/tetrisbis/src/hooks/useStage.js"],"names":["useState","useEffect","createStage","useStage","player","resetPlayer","stage","setStage","updateStage","prevStage","newStage","map","row","cell","prev"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,WAAT,KAAwB;AAAA,oBAClBL,QAAQ,CAACE,WAAW,EAAZ,CADU;AAAA;AAAA,QACrCI,KADqC;AAAA,QAC9BC,QAD8B;;AAI5CN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,WAAW,GAAGC,SAAS,IAAI;AAC/B;AACA,YAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAcC,GAAG,IAC5BA,GAAG,CAACD,GAAJ,CAAQE,IAAI,IAAKA,IAAI,CAAC,CAAD,CAAJ,KAAY,OAAZ,GAAsB,CAAC,CAAD,EAAI,OAAJ,CAAtB,GAAoCA,IAArD,CADW,CAAjB;AAGD,KALD;;AAMAN,IAAAA,QAAQ,CAACO,IAAI,IAAIN,WAAW,CAACM,IAAD,CAApB,CAAR;AACH,GARQ,EAQP,EARO,CAAT;AASA,SAAO,CAACR,KAAD,EAAQC,QAAR,CAAP;AACH,CAdM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) =>{\n    const [stage, setStage] = useState(createStage());\n\n\n    useEffect(() => {\n        const updateStage = prevStage => {\n          // First flush the stage\n          const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear']: cell))\n            )  \n        }\n        setStage(prev => updateStage(prev))\n    },[]);\n    return [stage, setStage];\n}"]},"metadata":{},"sourceType":"module"}